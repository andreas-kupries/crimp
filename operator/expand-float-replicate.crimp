crimp_primitive expand_float_replicate {
    image_float image
    int ww
    int hn
    int we
    int hs
} image {
    /*
     * Border expansion by extending the edges, i.e. replicating the border
     * pixels.
     */

    /*
     * This is the simple definition. Might be better to generate macros
     * specialized to each quadrant. Except, even they have to perform modulo
     * arithmetic, as the border may be larger than image's width or height,
     * causing multiple wrapping.
     */

    #define FILL(xo,yo) {					\
	    int xi = xo - ww;				\
	    int yi = yo - hn;				\
	    if      (xi < 0)         { xi = 0;            } \
	    else if (xi >= crimp_w (image)) { xi = (crimp_w (image)-1); } \
							    \
	    if      (yi < 0)         { yi = 0;            } \
	    else if (yi >= crimp_h (image)) { yi = (crimp_h (image)-1); } \
							    \
	    FLOATP (result, xo, yo) = FLOATP (image, xi, yi);	\
        }

    #define COPY(xo,yo,xi,yi) {				\
	    FLOATP (result, xo, yo) = FLOATP (image, xi, yi); \
        }

    #include <expand_op.c>
}

# - -- --- ----- -------- -------------
# vim: set sts=4 sw=4 tw=80 et ft=tcl:
#
# Local Variables:
# mode: tcl
# fill-column: 78
# End:
#
