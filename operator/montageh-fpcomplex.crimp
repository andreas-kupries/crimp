crimp_primitive montageh_fpcomplex {
    image_fpcomplex imageLeft
    image_fpcomplex imageRight
} image {
    /*
     * Place the two images adjacent to each other in the result, from left to
     * right. The images have to have the same height.
     */

    crimp_image*     result;
    int x, y;

    if (!crimp_eq_height (imageLeft, imageRight)) {
        Tcl_SetResult(interp, "image heights do not match", TCL_STATIC);
        return NULL;
    }

    result = crimp_new_fpcomplex_at (crimp_x (imageLeft), crimp_y (imageLeft),
				     crimp_w (imageLeft) + crimp_w (imageRight), crimp_h (imageLeft));

    for (y = 0; y < crimp_h (result); y++) {
        for (x = 0; x < crimp_w (imageLeft); x++) {

	    RE (result, x, y) = RE (imageLeft, x, y);
	    IM (result, x, y) = IM (imageLeft, x, y);
        }
    }

    for (y = 0; y < crimp_h (result); y++) {
        for (x = 0; x < crimp_w (imageRight); x++) {

	    RE (result, crimp_w (imageLeft) + x, y) = RE (imageRight, x, y);
	    IM (result, crimp_w (imageLeft) + x, y) = IM (imageRight, x, y);
        }
    }

    return result;
}

# - -- --- ----- -------- -------------
# vim: set sts=4 sw=4 tw=80 et ft=tcl:
#
# Local Variables:
# mode: tcl
# fill-column: 78
# End:
#
