# -*- tcl -*- tcl.tk//DSL tcltest//EN//2.0
## (c) 2011-2016 Andreas Kupries
# # ## ### ##### ######## ############# #####################

kt check Tcl     8.5
kt check tcltest 2

kt source support/synth.tcl

kt local support crimp::core
kt local testing crimp

# -------------------------------------------------------------------------
## Geometry manipulation. Crop image down. A special case of cut,
## restricted to regions inside of the input image.
##-------------------------------------------------------------------------

test crimp-crop-1.0 {image crop, wrong\#args, not enough} -body {
    crimp crop
} -returnCodes error -result {wrong # args: should be "crimp crop image ww hn we hs"}

test crimp-crop-1.0 {image crop, wrong\#args, not enough} -body {
    crimp crop IMAGE
} -returnCodes error -result {wrong # args: should be "crimp crop image ww hn we hs"}

test crimp-crop-1.1 {image crop, wrong\#args, not enough} -body {
    crimp crop IMAGE DX
} -returnCodes error -result {wrong # args: should be "crimp crop image ww hn we hs"}

test crimp-crop-1.2 {image crop, wrong\#args, not enough} -body {
    crimp crop IMAGE DX DY
} -returnCodes error -result {wrong # args: should be "crimp crop image ww hn we hs"}

test crimp-crop-1.3 {image crop, wrong\#args, not enough} -body {
    crimp crop IMAGE DX DY W
} -returnCodes error -result {wrong # args: should be "crimp crop image ww hn we hs"}

test crimp-crop-1.4 {image crop, wrong\#args, too many} -body {
    crimp crop IMAGE WW HN WE HS toomuch
} -returnCodes error -result {wrong # args: should be "crimp crop image ww hn we hs"}

test crimp-crop-1.5 {image crop, invalid args} -body {
    crimp crop IMAGE WW HN WE HS
} -returnCodes error -result {invalid image format}

test crimp-crop-1.6 {image crop, invalid args} -body {
    crimp crop [grey8] WW HN WE HS
} -returnCodes error -result {expected integer but got "WW"}

test crimp-crop-1.7 {image crop, invalid args} -body {
    crimp crop [grey8] 2 HN WE HS
} -returnCodes error -result {expected integer but got "HN"}

test crimp-crop-1.8 {image crop, invalid args} -body {
    crimp crop [grey8] 2 4 WE HS
} -returnCodes error -result {expected integer but got "WE"}

test crimp-crop-1.9 {image crop, invalid args} -body {
    crimp crop [grey8] 2 4 7 HS
} -returnCodes error -result {expected integer but got "HS"}

# Negative dimensions
test crimp-crop-1.10 {image crop, invalid args} -body {
    crimp crop [grey8] 2 4 -7 0
} -returnCodes error -result {bad image border size, expected non-negative values}

test crimp-crop-1.11 {image crop, invalid args} -body {
    crimp crop [grey8] 2 4 7 -5
} -returnCodes error -result {bad image border size, expected non-negative values}

test crimp-crop-1.12 {image crop, invalid args} -body {
    crimp crop [grey8] -2 4 7 5
} -returnCodes error -result {bad image border size, expected non-negative values}

test crimp-crop-1.13 {image crop, invalid args} -body {
    crimp crop [grey8] 2 -4 7 5
} -returnCodes error -result {bad image border size, expected non-negative values}

test crimp-crop-1.14 {image crop, invalid args} -body {
    crimp crop [grey8] 6 0 0 1
} -returnCodes error -result {bad image border size, larger than image dimensions}

test crimp-crop-1.15 {image crop, invalid args} -body {
    crimp crop [grey8] 0 6 1 0
} -returnCodes error -result {bad image border size, larger than image dimensions}

# -------------------------------------------------------------------------
# Test images are (0,0,5,5)
# Cases:
# - identical (1)
# - border aligned inside (8x)
# - fully inside (1)
# - empty crops (3x)
# Total: 1+8+1+3 = 13
# Above per imagetype (8), total 104
#
# TODO: rgb, rgba, float, fpcomplex
# -------------------------------------------------------------------------

foreach {k itype} {
    2 grey8
    3 grey16
    4 grey32
} {
    # identity
    test crimp-crop-$k.0 "[origin] image crop, identity, $itype" -body {
        astcl [crimp crop [$itype] 0 0 0 0]
    } -result [list crimp::image::$itype 0 0 5 5 {} [trim {
         0  1  2  3  4
         5  6  7  8  9
        10 11 12 13 14
        15 16 17 18 19
        20 21 22 23 24
    }]]

    #border aligned inside
    test crimp-crop-$k.1 "[origin] image crop, nw, $itype" -body {
        astcl [crimp crop [$itype] 0 0 3 3]
    } -result [list crimp::image::$itype 0 0 2 2 {} [trim {
        0  1
        5  6
    }]]

    test crimp-crop-$k.2 "[origin] image crop, ne, $itype" -body {
        astcl [crimp crop [$itype] 3 0 0 3]
    } -result [list crimp::image::$itype 3 0 2 2 {} [trim {
        3  4
        8  9
    }]]

    test crimp-crop-$k.3 "[origin] image crop, se, $itype" -body {
        astcl [crimp crop [$itype] 3 3 0 0]
    } -result [list crimp::image::$itype 3 3 2 2 {} [trim {
        18 19
        23 24
    }]]

    test crimp-crop-$k.4 "[origin] image crop, sw, $itype" -body {
        astcl [crimp crop [$itype] 0 3 3 0]
    } -result [list crimp::image::$itype 0 3 2 2 {} [trim {
        15 16
        20 21
    }]]


    test crimp-crop-$k.5 "[origin] image crop, north, $itype" -body {
        astcl [crimp crop [$itype] 1 0 1 2]
    } -result [list crimp::image::$itype 1 0 3 3 {} [trim {
         1  2  3
         6  7  8
        11 12 13
    }]]

    test crimp-crop-$k.6 "[origin] image crop, east, $itype" -body {
        astcl [crimp crop [$itype] 2 1 0 1]
    } -result [list crimp::image::$itype 2 1 3 3 {} [trim {
         7  8  9
        12 13 14
        17 18 19
    }]]

    test crimp-crop-$k.7 "[origin] image crop, south, $itype" -body {
        astcl [crimp crop [$itype] 1 2 1 0]
    } -result [list crimp::image::$itype 1 2 3 3 {} [trim {
        11 12 13
        16 17 18
        21 22 23
    }]]

    test crimp-crop-$k.8 "[origin] image crop, west, $itype" -body {
        astcl [crimp crop [$itype] 0 1 2 1]
    } -result [list crimp::image::$itype 0 1 3 3 {} [trim {
         5  6  7
        10 11 12
        15 16 17
    }]]

    # fully inside
    test crimp-crop-$k.9 "[origin] image crop, inside, $itype" -body {
        astcl [crimp crop [$itype] 1 1 1 1]
    } -result [list crimp::image::$itype 1 1 3 3 {} [trim {
         6  7  8
        11 12 13
        16 17 18
    }]]

    # empty crops

    test crimp-crop-$k.26 "[origin] image crop, empty horizontal, $itype" -body {
        astcl [crimp crop [$itype] 0 0 0 5]
    } -result [list crimp::image::$itype 0 0 5 0 {} {}]

    test crimp-crop-$k.27 "[origin] image crop, empty vertical, $itype" -body {
        astcl [crimp crop [$itype] 0 0 5 0]
    } -result [list crimp::image::$itype 0 0 0 5 {} {}]

    test crimp-crop-$k.28 "[origin] image crop, empty all, $itype" -body {
        astcl [crimp crop [$itype] 0 0 5 5]
    } -result [list crimp::image::$itype 0 0 0 0 {} {}]
}

# -------------------------------------------------------------------------
# -------------------------------------------------------------------------
# -------------------------------------------------------------------------
## Handling of input location: Modified pass through to result.

foreach {n itype} {
    0 grey8
    1 grey16
    2 grey32
    3 rgb
    4 rgba
    5 hsv
    6 float
    7 fpcomplex
} {
    test crimp-crop-10.$n "[origin] image crop, $itype, location handling" -body {
	crimp geometry [crimp crop [crimp place [$itype] 23 45] 1 2 3 1]
    } -result {24 47 1 2}
}

# -------------------------------------------------------------------------
cleanupTests

# Local variables:
# mode: tcl
# indent-tabs-mode: nil
# End:
