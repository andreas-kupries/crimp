crimp_primitive join_2grey16 {
    image_grey8 msb
    image_grey8 lsb
} image {
    crimp_image*     result;
    int              x, y;

    if (!crimp_eq_dim (msb, lsb)) {
        Tcl_SetResult(interp, "image dimensions do not match", TCL_STATIC);
        return NULL;
    }

    result = crimp_new_grey16_at (crimp_x (msb), crimp_y (msb),
			          crimp_w (msb), crimp_h (msb));

    for (y = 0; y < crimp_h (result); y++) {
        for (x = 0; x < crimp_w (result); x++) {

	    /*
	     * Assembling the bytes of a pixel from the associated input images.
	     */

	    int value = 
	        GREY8  (lsb, x, y) |
	        (GREY8 (msb, x, y) << 8);

	    GREY16 (result, x, y) = value;
        }
    }

    return result;
}

# - -- --- ----- -------- -------------
# vim: set sts=4 sw=4 tw=80 et ft=tcl:
#
# Local Variables:
# mode: tcl
# fill-column: 78
# End:
#
