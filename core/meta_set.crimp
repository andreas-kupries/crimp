crimp_primitive C::meta_set {
    image_obj image
    Tcl_Obj* metaObj
} object0 {
    /*
     * Create argument type providing both obj and image.
     */
    
    /*
     * Nothing to do if the assignment doesn't change anything.
     */
    
    if (metaObj == image.i->meta) {
        return image.o;
    }
    
    /*
     * For a non-shared image we can replace in-place, avoiding a memory copy.
     */
    
    if (!Tcl_IsShared(image.o)) {
        Tcl_IncrRefCount (metaObj);
        Tcl_DecrRefCount (image.i->meta);
        image.i->meta = metaObj;
    	return image.o;
    }
    
    /*
     * Create a new image with the modified meta data reference and otherwise
     * identical.
     */
    
    return crimp_new_image_obj (crimp_newm (image.i->itype,
					    crimp_w(image.i), crimp_h(image.i),
					    metaObj));
}

# - -- --- ----- -------- -------------
# vim: set sts=4 sw=4 tw=80 et ft=tcl:
#
# Local Variables:
# mode: tcl
# fill-column: 78
# End:
#
