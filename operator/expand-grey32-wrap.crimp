crimp_primitive expand_grey32_wrap {
    image_grey32 image
    int ww
    int hn
    int we
    int hs
} image {
    /*
     * Border expansion by toroidal wrapping, also called cyclic expansion.
     */

    /*
     * This is the simple definition. Might be better to generate macros
     * specialized to each quadrant. Except, even they have to perform modulo
     * arithmetic, as the border may be larger than image's width or height,
     * causing multiple wrapping.
     */

    #define FILL(xo,yo) {				\
	    int xi = xo - ww;			\
	    int yi = yo - hn;			\
	    while (xi < 0) { xi += crimp_w (image); }	\
	    while (yi < 0) { yi += crimp_h (image); }	\
	    xi %= crimp_w (image);				\
	    yi %= crimp_h (image);				\
						    \
	    GREY32 (result, xo, yo) = GREY32 (image, xi, yi); \
        }

    #define COPY(xo,yo,xi,yi) {			\
	    GREY32 (result, xo, yo) = GREY32 (image, xi, yi); \
        }

    #include <expand_op.c>
}

# - -- --- ----- -------- -------------
# vim: set sts=4 sw=4 tw=80 et ft=tcl:
#
# Local Variables:
# mode: tcl
# fill-column: 78
# End:
#
