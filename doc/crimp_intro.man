[comment {-*- tcl -*- doctools manpage}]
[manpage_begin crimp_introduction n 1]
[include include/module.inc]
[titledesc {CRIMP - Introduction to CRIMP}]
[description]

Welcome to CRIMP, the C Raster Image Manipulation Package, a set of
extensions of [term Tcl] for the handling and processing of
images. Due to the nature of images as a 2-dimensional table of
numbers some of the commands may reach into matrix and vector
mathematics as well.

[comment {
[para]
What are your goals which drove you here ?

[list_begin enumerated]
[enum]
[list_end]
}]

[section {Related Documents}]

[list_begin enum]
[enum] [term {CRIMP - How To Get The Sources}].
[enum] [term {CRIMP - The Installer's Guide}].
[enum] [term {CRIMP - The Developer's Guide}].
[list_end]


[section {System Architecture}]

The system can be split into roughly three sections, as seen in the
figure below

[para][image architecture][para]

These sections are:

[list_begin enumerated]
[enum]

At the [emph core] is a single package, [package crimp::core],
providing both C and Tcl level data types and accessors for images,
plus rudimentary IO capabilities (conversion to and construction from
matrices of numbers, represented by nested Tcl lists).

[para] While this package is functional on its own most of the truly
interesting commands will be found in the packages built on top of
this one.

[enum]

The [emph processing] section contains a single package as well,
[package crimp]. Built on top of the [package crimp::core] this
package provides the majority of CRIMPs power for manipulating and
transforming images in a number of ways.

[enum]

The last section, for [emph IO], currently contains five packages,
each providing the ability to import and/or export CRIMP images from a
specific external image format. These packages, all built on top of
the [package crimp::core] are

[list_begin definitions]
[def [package crimp::bmp]]

This package provides the ability to read BMP images, i.e. the Windows
bitmap format, as defined at [uri http://en.wikipedia.org/wiki/BMP_file_format].

[def [package crimp::pfm]]

This package provides the ability to read from and write to PFM
images, i.e. the "Portable Float Map" format. This format is an
unofficial derivative of the "Portable Grey Map" (see below), with the
integer numbers of that format replaced with floating point values.

[def [package crimp::pgm]]

This package provides the ability to read from and write to PGM
images, i.e. the "Portable Grey Map" format as specified at
[uri http://en.wikipedia.org/wiki/Netpbm_format].

[def [package crimp::ppm]]

This package provides the ability to read from and write to PPM
images, i.e. the "Portable Pix Map" format as specified at
[uri http://en.wikipedia.org/wiki/Netpbm_format].

[def [package crimp::tk]]

This package provides the ability to convert CRIMP images into Tk
photo images and vice versa. This is the [emph only] package in the
whole set which is dependent on the [package Tk] package and its
facilities.

[list_end]
[list_end]

The package dependencies are shown in the next image. It is mostly
as you would exect, with pretty much everything depending the on the
[package crimp::core] and that depending on nothing but itself.

[para] Of note however is that the [package crimp::{ppm,pgm,pfm}]
packages all depend on the main [package crimp] package. They all
use the [cmd {crimp convert}] ensemble, enabling them to handle not
only their natural image types, but a number of others as well.

[para][image pkg_dependencies][para]

[manpage_end]

