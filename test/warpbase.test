# -*- tcl -*-
# -------------------------------------------------------------------------

source [file join \
            [file dirname [file join [pwd] [info script]]] \
            testutilities.tcl]

testsNeedTcl     8.5
testsNeedTcltest 2

support { useLocalFile synth.tcl }
support { useC [mainPath _test/lib]/crimp_core* crimp::core no }
testing { useC [mainPath _test/lib]/crimp*      crimp       no }

# -------------------------------------------------------------------------
## Geometry manipulation. Warp basics (points, geometries).
# -------------------------------------------------------------------------

test crimp-warp-base-0.0 {image warp, wrong\#args} -body {
    crimp warp
} -returnCodes error -result {wrong # args: should be "crimp warp subcommand ?argument ...?"}

test crimp-warp-base-0.1 {image warp, invalid method} -body {
    crimp warp BOGUS
} -returnCodes error -result {unknown or ambiguous subcommand "BOGUS": must be box, field, point, or projective}

# -------------------------------------------------------------------------

test crimp-warp-point-1.0 {image warp point, wrong\#args, not enough} -body {
    crimp warp point
} -returnCodes error -result {wrong # args: should be "crimp warp point transform ..."}

test crimp-warp-point-1.1 {image warp point, invalid transform} -body {
    crimp warp point T
} -returnCodes error -result {expected projective transform but got "T"}

test crimp-warp-point-1.2 {image warp point, invalid point} -body {
    crimp warp point [crimp transform reflect line {2 4} {4 0}] X
} -returnCodes error -result {wrong # args: should be "crimp::warp_point forwardObj x y"}

test crimp-warp-point-1.3 {image warp point, invalid point} -body {
    crimp warp point [crimp transform reflect line {2 4} {4 0}] {X 1}
} -returnCodes error -result {expected floating-point number but got "X"}

test crimp-warp-point-1.4 {image warp point, invalid point} -body {
    crimp warp point [crimp transform reflect line {2 4} {4 0}] {1 Y}
} -returnCodes error -result {expected floating-point number but got "Y"}

# -------------------------------------------------------------------------
## Simple point transforms.

set n 0
foreach {p pi pm pr ps pt pro pmo} {
    { 0  0}     {0.0000 0.0000}  {6.4000 3.2000}  {-0.8284 2.0000} {0.0000 0.0000}   {2.0000 3.0000}   {0.0000 0.0000}  {0.0000 0.0000}
    {10  0}    {10.0000 0.0000}  {0.4000 -4.8000} {6.2426 -5.0711} {20.0000 0.0000}  {12.0000 3.0000}  {7.0711 -7.0711} {0.0000 10.0000}
    { 0 10}     {0.0000 10.0000} {-1.6000 9.2000} {6.2426 9.0711}  {0.0000 30.0000}  {2.0000 13.0000}  {7.0711 7.0711}  {10.0000 0.0000}
    {10 10}    {10.0000 10.0000} {-7.6000 1.2000} {13.3137 2.0000} {20.0000 30.0000} {12.0000 13.0000} {14.1421 0.0000} {10.0000 10.0000}
} {
    # input    identity          mirror/reflection   rotation/(2,2)    scaling           translation       rotate/origin    reflect/origin

    # TODO: validate the results manually
    # /ok
    test crimp-warp-point-2.0.$n "image warp point, identity" -setup {
        set t [crimp transform identity]
    } -body {
        lmap {format %.4f} [lindex [crimp warp point $t $p] 0]
    } -cleanup {
        unset t
    } -result $pi

    # /validate
    test crimp-warp-point-2.1.$n "image warp point, reflection" -setup {
        set t [crimp transform reflect line {2 4} {4 0}]
    } -body {
        lmap {format %.4f} [lindex [crimp warp point $t $p] 0]
    } -cleanup {
        unset t
    } -result $pm

    # /ok
    test crimp-warp-point-2.2.$n "image warp point, rotation" -setup {
        set t [crimp transform rotate 45 {2 2}]
    } -body {
        lmap {format %.4f} [lindex [crimp warp point $t $p] 0]
    } -cleanup {
        unset t
    } -result $pr

    # /ok
    test crimp-warp-point-2.3.$n "image warp point, scale" -setup {
        set t [crimp transform scale 2 3]
    } -body {
        lmap {format %.4f} [lindex [crimp warp point $t $p] 0]
    } -cleanup {
        unset t
    } -result $ps

    # /ok
    test crimp-warp-point-2.4.$n "image warp point, translate" -setup {
        set t [crimp transform translate 2 3]
    } -body {
        lmap {format %.4f} [lindex [crimp warp point $t $p] 0]
    } -cleanup {
        unset t
    } -result $pt

    test crimp-warp-point-2.5.$n "image warp point, rotation origin" -setup {
        set t [crimp transform rotate 45]
    } -body {
        lmap {format %.4f} [lindex [crimp warp point $t $p] 0]
    } -cleanup {
        unset t
    } -result $pro

    test crimp-warp-point-2.6.$n "image warp point, reflection origin" -setup {
        set t [crimp transform reflect line {10 10}]
    } -body {
        lmap {format %.4f} [lindex [crimp warp point $t $p] 0]
    } -cleanup {
        unset t
    } -result $pmo

    # todo quadrilateral
    incr n
}

# -------------------------------------------------------------------------

test crimp-warp-box-3.0 {image warp box, wrong\#args, not enough} -body {
    crimp warp box
} -returnCodes error -result {wrong # args: should be "crimp warp box transform geometry"}

test crimp-warp-box-3.1 {image warp box, wrong\#args, not enough} -body {
    crimp warp box T
} -returnCodes error -result {wrong # args: should be "crimp warp box transform geometry"}

test crimp-warp-box-3.2 {image warp box, wrong\#args, too many} -body {
    crimp warp box T G toomuch
} -returnCodes error -result {wrong # args: should be "crimp warp box transform geometry"}

test crimp-warp-box-3.3 {image warp box, invalid transform} -body {
    crimp warp box T G
} -returnCodes error -result {expected projective transform but got "T"}

test crimp-warp-box-3.4 {image warp box, invalid box} -body {
    crimp warp box [crimp transform reflect line {2 4} {4 0}] G
} -returnCodes error -result {wrong # args: should be "crimp::warp_box forwardObj x y w h"}

test crimp-warp-box-3.5 {image warp box, invalid box} -body {
    crimp warp box [crimp transform reflect line {2 4} {4 0}] {X 1 5 5}
} -returnCodes error -result {expected integer but got "X"}

test crimp-warp-box-3.6 {image warp box, invalid box} -body {
    crimp warp box [crimp transform reflect line {2 4} {4 0}] {1 Y 5 5}
} -returnCodes error -result {expected integer but got "Y"}

test crimp-warp-box-3.7 {image warp box, invalid box} -body {
    crimp warp box [crimp transform reflect line {2 4} {4 0}] {1 1 W 5}
} -returnCodes error -result {expected integer but got "W"}

test crimp-warp-box-3.8 {image warp box, invalid box} -body {
    crimp warp box [crimp transform reflect line {2 4} {4 0}] {1 1 5 H}
} -returnCodes error -result {expected integer but got "H"}

# -------------------------------------------------------------------------
testsuiteCleanup

# Local variables:
# mode: tcl
# indent-tabs-mode: nil
# End:
