[comment {-*- tcl -*- doctools manpage}]
[manpage_begin crimp_install_guide n 1]
[include include/module.inc]
[titledesc {CRIMP - The Installer's Guide}]
[description]

Welcome to CRIMP, the C Raster Image Manipulation Package, a set of
extensions of [term Tcl] for the handling and processing of
images.

[para]

The audience of this document is anyone wishing to build the packages,
for either themselves, or others.

[para]

For a developer intending to extend or modify the packages we
additionally provide

[list_begin enum]
[enum] [term {CRIMP - The Developer's Guide}].
[list_end]

[para]

Please read [term {CRIMP - How To Get The Sources}] first, if that was
not done already. Here we assume that the sources are already
available in a directory of your choice.

[para]

[section Requisites]

[subsection Tcl]

A working Tcl installation is needed, however as we are building a Tcl
package that should be pretty much obvious, and I will not belabor the
point.

[para] Use whatever you are comfortable with, as long as it provides
Tcl 8.5, or higher.

[para] An easy way to get an installation of a recent Tcl 8.5, which I
recommend, is to download and install
[uri http://www.activestate.com ActiveState's]
[uri http://www.activestate.com/activetcl ActiveTcl] for your platform.
Follow the link for ActiveTcl to find it.

[para] After the installation of ActiveTcl 8.5 in a directory of your
choice run the command

[example {
    teacup update
}]

This will install a lot more packages than found in the distribution
alone.

(Disclosure: I, Andreas Kupries, work for ActiveState, maintaining
ActiveTcl and TclDevKit).


[subsection CriTcl]

The tool [uri http://jcw.github.com/critcl critcl] is required to
build CRIMP, either as an application found in the PATH, or as a Tcl
package available to the [cmd tclsh] used to run CRIMP's
[sectref {Build & Installation}] process.

[para] Version 3 is required, or higher

[para]

The link for critcl goes it its official website which explains how to
get its sources, or as a starkit.

[para]

As a starkit simply put the file into your PATH. A good place would be
the directory your [cmd tclsh] is found in, as that directory should
already be listed in the PATH environment variable.

[para] If the [cmd tclsh] in question resides in a directory
accessible only to the system's administrator it may be necessary to
login as that administrator, or at least run the commands with admin
privileges (on linux: su -, sudo).

[para][lb]I am pretty much assuming here that the developer knows his
or her way around a Linux system.[rb]

[para]

On Windows it may be necessary to rename the starkit, adding the
extension [file .tcl], to trigger the association with a working tclsh
as its runtime.

[para] On unix it may be necessary to make [cmd tclsh] available under
the name of [cmd tclkit] for the starkit to work.

[para]

When not using a starkit, you have to get and install the sources per
the instructions at the site, i.e. [uri http://jcw.github.com/critcl].


[section {Build & Installation}]

To install CRIMP simply run

[example {
    /path/to/tclsh8.5 /path/to/crimp/build.tcl install
}]

where [file /path/to/tclsh8.5] is the tclsh of your Tcl installation, and
[file /path/to/crimp] the location of the CRIMP sources on your system.

[para]

This builds all packages and then places them in a directory where the
[cmd tclsh8.5] will find them. 

[para]

On Windows you can invoke the file [file build.tcl] with a
double-click.  This will pop up a small graphical interface for
entering the destination and performing the installation. This
handling of a double-click is restricted to Windows only however.

[para]

On unix the same GUI is acessible by invoking [file build.tcl] without
any arguments.

[para]

To get help about the methods of [file build.tcl], and their complete
syntax, invoke  [file build.tcl] with argument [method help], i.e., like

[example {
    /path/to/tclsh8.5 /path/to/crimp/build.tcl help
}]

[manpage_end]

