crimp_primitive setalpha_rgba_rgba {
    image_rgba image
    image_rgba imageA
} image {
    /*
     * Replace the input's alpha channel with the alpha channel of the second
     * image. IOW, copy the second image's alpha channel over into the first.
     */

    crimp_image*     result;
    int x, y;


    if (!crimp_eq_dim (image, imageA)) {
        Tcl_SetResult(interp, "image dimensions do not match", TCL_STATIC);
        return NULL;
    }

    result = crimp_new_like (image);

    for (y = 0; y < crimp_h (result); y++) {
        for (x = 0; x < crimp_w (result); x++) {
	    R (result, x, y) = R (image, x, y);
	    G (result, x, y) = G (image, x, y);
	    B (result, x, y) = B (image, x, y);
	    A (result, x, y) = A (imageA, x, y);
        }
    }

    return result;
}

# - -- --- ----- -------- -------------
# vim: set sts=4 sw=4 tw=80 et ft=tcl:
#
# Local Variables:
# mode: tcl
# fill-column: 78
# End:
#
