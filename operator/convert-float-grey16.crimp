convert_2grey16_float
Tcl_Obj* imageObj

/*
 * This converter maps from float to grey16 using identity. Values outside of
 * the destination range are clampled to the maximum and minimum values,
 * respectively. I.e. saturated arithmetic is used.
 *
 * FUTURE: Either extend this converter to take semi-arbitrary mapping
 * functions (concatenation of arbitrary polynomials), or make such
 * transformations a separate primitive we can handle under the 'map'
 * method.
 */

#undef  MINVAL
#undef  MAXVAL

#define MINVAL 0
#define MAXVAL 65535

crimp_image* image;
crimp_image* result;
int          x, y;

crimp_input (imageObj, image, float);

result = crimp_new_grey16 (image->w, image->h);

for (y = 0; y < image->h; y++) {
    for (x = 0; x < image->w; x++) {
	double f =  FLOATP(image, x, y);
	GREY16 (result, x, y) = CLAMPT (MINVAL, int, f, MAXVAL);
    }
}

Tcl_SetObjResult(interp, crimp_new_image_obj (result));
return TCL_OK;


/* vim: set sts=4 sw=4 tw=80 et ft=c: */
/*
 * Local Variables:
 * mode: c
 * c-basic-offset: 4
 * fill-column: 78
 * End:
 */
