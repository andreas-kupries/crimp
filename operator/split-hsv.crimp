crimp_primitive split_hsv {
    image_hsv image
} object0 {
    Tcl_Obj*         list[3];
    const crimp_imagetype* grey = crimp_imagetype_find ("crimp::image::grey8");
    crimp_image*     hue;
    crimp_image*     sat;
    crimp_image*     val;
    int              x, y;


    hue = crimp_new_at (grey, crimp_x (image), crimp_y (image),
			      crimp_w (image), crimp_h (image));
    sat = crimp_new_at (grey, crimp_x (image), crimp_y (image),
			      crimp_w (image), crimp_h (image));
    val = crimp_new_at (grey, crimp_x (image), crimp_y (image),
			      crimp_w (image), crimp_h (image));

    for (y = 0; y < crimp_h (image); y++) {
        for (x = 0; x < crimp_w (image); x++) {

	    /*
	     * Placing the pixels of each color channel into their own images.
	     */

	    GREY8 (hue, x, y) = H (image, x, y);
	    GREY8 (sat, x, y) = S (image, x, y);
	    GREY8 (val, x, y) = V (image, x, y);
        }
    }

    list [0] = crimp_new_image_obj (hue);
    list [1] = crimp_new_image_obj (sat);
    list [2] = crimp_new_image_obj (val);

    return Tcl_NewListObj (3, list);
}

# - -- --- ----- -------- -------------
# vim: set sts=4 sw=4 tw=80 et ft=tcl:
#
# Local Variables:
# mode: tcl
# fill-column: 78
# End:
#
