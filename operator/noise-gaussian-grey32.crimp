crimp_primitive noise_gaussian_grey32 {
    image_grey32 image
    double mean
    double variance
} image {
    const double maxval = MAXVAL_GREY32;

    /*
     * Adding gaussian-style noise (*) to the image, converting a source of
     * uniformly distributed numbers to gaussian distributed numbers.
     */

    crimp_image* result;
    int          x, y;


    result = crimp_new_like (image);

    for (y = 0; y < crimp_h (result); y++) {
        for (x = 0; x < crimp_w (result); x++) {
	    double ran = sqrt ((-2.0f ) * log(RAND_FLOAT())) * sin (2 * M_PI * RAND_FLOAT());
	    double pix = maxval * ((GREY32 (image, x, y) / maxval) + (sqrt(variance) * ran) + mean);

	    GREY32 (result, x, y) = CLAMP (0, (int) pix, MAXVAL_GREY32);
        }
    }


    return result;

}

# - -- --- ----- -------- -------------
# vim: set sts=4 sw=4 tw=80 et ft=tcl:
#
# Local Variables:
# mode: tcl
# fill-column: 78
# End:
#
