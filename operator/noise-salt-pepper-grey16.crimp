crimp_primitive noise_salt_pepper_grey16 {
    image_grey16 image
    double threshold
} image {
    /*
     * Adding Salt/Pepper-style noise (*) to the image, using a a threshold
     * 'value'.
     *
     * 0             <= random < 1/2 threshold => Black Pepper
     * 1/2 threshold <= random < threshold     => White Salt
     * else                                    => No change.
     *
     * (*) Salt/Pepper == white/black pixels replacing the actual image pixel.
     */

    crimp_image* result;
    int          x, y;
    double       half = threshold / 2.;
    double       randval;


    result = crimp_new_like (image);

    for (y = 0; y < crimp_h (result); y++) {
        for (x = 0; x < crimp_w (result); x++) {
	    randval = RAND_FLOAT();

	    if (randval < 0) {
	        goto keep;
	    }
	    if (randval < half) {
	        GREY16 (result, x, y) = BLACK;
	        continue;
	    }
            if (randval < threshold) {
	        GREY16 (result, x, y) = WHITE;
	        continue;
	    }
        keep:
	    GREY16 (result, x, y) = GREY16 (image, x, y);
        }
    }

    return result;

}

# - -- --- ----- -------- -------------
# vim: set sts=4 sw=4 tw=80 et ft=tcl:
#
# Local Variables:
# mode: tcl
# fill-column: 78
# End:
#
