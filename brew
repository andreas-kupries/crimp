#!/bin/sh
# -*- tcl -*- \
exec tclsh "$0" ${1+"$@"}
package require Tcl 8.5
set me [file normalize [info script]]
proc main {} {
    global argv
    if {![llength $argv]} { set argv help}
    if {[catch {
	eval _$argv
    }]} usage
    exit 0
}
proc usage {{status 1}} {
    puts stderr $::errorInfo;exit
    global argv0
    puts stderr "Usage: $argv0 ?install ?dst?|starkit ?dst? ?interp?|starpack prefix ?dst?|help|recipes?"
    exit $status
}
proc +x {path} {
    catch { file attributes $path -permissions u+x }
    return
}
proc grep {file pattern} {
    set lines [split [read [set chan [open $file r]]] \n]
    close $chan
    return [lsearch -all -inline -glob $lines $pattern]
}
proc version {file} {
    return [lindex [grep $file {*package provide*}] 0 3]
}
proc _help {} {
    usage 0
    return
}
proc _recipes {} {
    set r {}
    foreach c [info commands _*] {
	lappend r [string range $c 1 end]
    }
    puts [lsort -dict $r]
    return
}
proc _install {{dst {}}} {
    set src     [file dirname $::me]/crimp.tcl
    set version [version $src]

    if {[llength [info level 0]] < 2} {
	set dst [info library]
    }

    # Package: crimp
    package require critcl::app

    # Build binaries
    critcl::app::main [list -cache [pwd]/BUILD -libdir $dst -pkg $src]
    file delete -force $dst/crimp$version
    file rename        $dst/crimp $dst/crimp$version

    puts "Installed package:     $dst/crimp$version"
    return
}
proc _wrap4tea {{dst {}}} {
    if {[llength [info level 0]] < 2} {
	set dst [file join [pwd] tea]
    }

    set src     [file dirname $::me]/crimp.tcl
    set version [version $src]

    # Package: crimp
    package require critcl::app

    # Generate TEA directory hierarchy
    critcl::app::main [list -cache [pwd]/BUILD -libdir $dst -tea $src]
    file delete -force $dst/crimp$version
    file rename        $dst/crimp $dst/crimp$version

    puts "Installed package:     $dst/crimp$version"
}
main
