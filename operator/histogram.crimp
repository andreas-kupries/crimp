histogram
Tcl_Obj* imageObj

/*
 * This operation is a general histogram generator
 */

crimp_image*     image;
int              x, y, c, i, count;
int*             histogram;
Tcl_Obj*         d; /* dict of histograms, indexed by channel name */
Tcl_Obj*         h; /* histogram dict, indexed by pixel value */
Tcl_Obj*         k; /* channel name as Tcl_Obj, for the main dict */

crimp_input_any (imageObj, image);
/*
 * Actually NOT any. The code below is not able to handle grey16 and grey32,
 * as images with these types can have more than 256 distinct pixel values.
 * They have 64K and 4G possibilities.

 * XXX This needs fixing. The grey16 could possibly be fit into the code
 * below, grey32 however will definitely not fit without optimizations, like
 * not allocating memory for unused pixel values.
 *
 * Should maybe split per type, sharing the counter, etc. code.
 */

histogram = NALLOC (256 * image->itype->channels, int);

/*
 * Count the pixel values.
 */

#define BUCKET(c,v) histogram [((c) * image->itype->channels + (v))]

for (y = 0; y < image->h; y++) {
    for (x = 0; x < image->w; x++) {
	for (c = 0; c < image->itype->channels; c++) {
	    BUCKET (c, CH (image, c, x, y)) ++;
	}
    }
}

/*
 * Convert the data into a dictionary to return.
 *
 * XXX: For the (very) large histograms of grey16 (64K) and grey32 (4GB) it
 * would be sensible to suppress the entries for all pixel values which are
 * not used, i.e. have a count of zero.
 */

d = Tcl_NewDictObj ();

for (c = 0; c < image->itype->channels; c++) {

    k = Tcl_NewStringObj (image->itype->cname [c],-1);
    h = Tcl_NewDictObj ();

    for (i = 0; i < 256; i++) {
	count = BUCKET (c, i);

	/*
	 * XXX future optimization: keep a hash table of the Int objects, and
	 * share them as much a is possible.
	 */

	Tcl_DictObjPut (interp, h,
			Tcl_NewIntObj (i),
			Tcl_NewIntObj (count));
    }

    Tcl_DictObjPut (interp, d, k, h);
}

ckfree ((char*) histogram);

Tcl_SetObjResult(interp, d);
return TCL_OK;


/* vim: set sts=4 sw=4 tw=80 et ft=c: */
/*
 * Local Variables:
 * mode: c
 * c-basic-offset: 4
 * fill-column: 78
 * End:
 */
