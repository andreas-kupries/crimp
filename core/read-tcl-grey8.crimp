crimp_primitive read::Tcl_grey8 {
    Tcl_Obj* pixels
} image {
    /*
     * Create a grey8 image from a list of lists of integers in the range
     * [0..255]. This is, in essence, a read command, just using core Tcl
     * values instead of a Tk photo as input.
     *
     * Using this command should be easier than trying to work with 'list' and
     * 'binary'. This way the result even already has the proper intrep.
     */
    
    Tcl_Obj** rowv;
    Tcl_Obj** colv;
    crimp_image*     result;
    int              x, y, w, h, rowc, colc, value;
    
    /*
     * Check input, i.e. verify structure and extract dimensions
     */
    
    if (Tcl_ListObjGetElements(interp, pixels, &rowc, &rowv) != TCL_OK) {
        return NULL;
    }
    h = rowc;
    w = 0;
    for (y = 0; y < h; y++) {
        if (Tcl_ListObjGetElements(interp, rowv [y], &colc, &colv) != TCL_OK) {
	    return NULL;
        }
        if (colc > w) {
	    w = colc;
        }
        for (x = 0; x < colc; x++) {
	    if (Tcl_GetIntFromObj(interp, colv [x], &value) != TCL_OK) {
		return NULL;
	    }
	    if ((value < 0) || (value > MAXVAL_GREY8)) {
		Tcl_SetResult(interp, "integer out of range 0.." MAXVAL_STR_GREY8, TCL_STATIC);
		return NULL;
	    }
        }
    }
    
    result = crimp_new_grey8 (w, h);
    
    for (y = 0; y < h; y++) {
        Tcl_ListObjGetElements(interp, rowv [y], &colc, &colv);
    
        for (x = 0; x < colc; x++) {
	    Tcl_GetIntFromObj(interp, colv [x], &value);
	    GREY8 (result, x, y) = value;
        }
        for (; x < w; x++) {
	    GREY8 (result, x, y) = BLACK;
        }
    }
    
    return result;    
}

# - -- --- ----- -------- -------------
# vim: set sts=4 sw=4 tw=80 et ft=tcl:
#
# Local Variables:
# mode: tcl
# fill-column: 78
# End:
#
